2021-04-07 16:15:07 DEBUG ClientService:13 - Client{id=0, name='Maria', email='maria@mail.com', phone=380919229123, about='new client Maria', age=20}
2021-04-07 16:15:07 DEBUG ClientDao:14 - Client{id=0, name='Maria', email='maria@mail.com', phone=380919229123, about='new client Maria', age=20}
2021-04-07 16:15:07 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-04-07 16:15:07 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-07 16:15:07 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-07 16:15:07 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-07 16:15:07 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.29.Final
2021-04-07 16:15:07 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-04-07 16:15:07 DEBUG LocalXmlResourceResolver:63 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-04-07 16:15:07 DEBUG LocalXmlResourceResolver:91 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-04-07 16:15:07 DEBUG JaxbCfgProcessor:117 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-04-07 16:15:07 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-04-07 16:15:07 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-04-07 16:15:07 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-04-07 16:15:07 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-04-07 16:15:07 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-04-07 16:15:07 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-04-07 16:15:07 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-04-07 16:15:07 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@75ed9710
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@75ed9710
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@75ed9710
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@79da1ec0
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@62ea3440
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@55b5f5d2
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4a3329b9
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@4a3329b9
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4a3329b9
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@3f053c80
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@3f053c80
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3f053c80
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3b956878
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@3b956878
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3b956878
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@388ba540
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@388ba540
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@388ba540
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7be58f16
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@7be58f16
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7be58f16
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1b065145
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1b065145
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1b065145
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@56c9bbd8
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@56c9bbd8
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@56c9bbd8
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@619bfe29
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@619bfe29
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@30f5a68a
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@30f5a68a
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@4c37b5b
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@4c37b5b
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@150ab4ed
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7a8fa663
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@485a3466
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@485a3466
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@c260bdc
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@c260bdc
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@72445aba
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72445aba
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@56276db8
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@56276db8
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@20b5f2ac
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@20b5f2ac
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@47dbb1e2
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@47dbb1e2
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@773f7880
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@773f7880
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@773cbf4f
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@773cbf4f
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1bc715b8
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1bc715b8
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@376a312c
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@376a312c
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@77602954
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@77602954
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@2cac4385
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2cac4385
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2cac4385
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34a1d21f
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@4e517165
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4e517165
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4e517165
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@42f3156d
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@65aa6596
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@1ce61929
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1ce61929
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@39dcf4b0
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@39dcf4b0
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4c6daf0
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4c6daf0
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@1cd201a8
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1cd201a8
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@19fe4644
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@19fe4644
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18245eb0
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@7a48e6e2
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@7a48e6e2
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@7a48e6e2
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@34a75079
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@34a75079
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@34a75079
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@4052274f
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@5bf22f18
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@741b3bc3
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@741b3bc3
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@741b3bc3
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6d366c9b
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6d366c9b
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6d366c9b
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@64beebb7
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@32f0fba8
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@eb6449b
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@eb6449b
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7e985ce9
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@423e4cbb
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@423e4cbb
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@235f4c10
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@235f4c10
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@757d6814
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@52b56a3e
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@226642a5
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@76c7beb3
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76c7beb3
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7b139eab
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e76dac
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@611df6e3
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5f2f577
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6273c5a4
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d465e4b
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@53e211ee
2021-04-07 16:15:07 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@41a90fa8
2021-04-07 16:15:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-04-07 16:15:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-04-07 16:15:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-07 16:15:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-04-07 16:15:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-04-07 16:15:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-04-07 16:15:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-04-07 16:15:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-07 16:15:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-04-07 16:15:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-04-07 16:15:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-04-07 16:15:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-04-07 16:15:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-04-07 16:15:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-04-07 16:15:07 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-04-07 16:15:07 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://localhost:5432/postgres]
2021-04-07 16:15:07 INFO  pooling:121 - HHH10001001: Connection properties: {password=jenyate, user=postgres}
2021-04-07 16:15:07 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-04-07 16:15:07 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-04-07 16:15:07 INFO  DriverManagerConnectionProviderImpl:259 - HHH000115: Hibernate connection pool size: 14 (min=1)
2021-04-07 16:15:08 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 13.2
      major : 13
      minor : 2
2021-04-07 16:15:08 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.18
      major : 42
      minor : 2
2021-04-07 16:15:08 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-04-07 16:15:08 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL9Dialect
2021-04-07 16:15:08 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-04-07 16:15:08 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-04-07 16:15:08 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3f36b447
2021-04-07 16:15:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3f36b447
2021-04-07 16:15:08 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@19fe4644
2021-04-07 16:15:08 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d39f2d8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6ad6fa53]
2021-04-07 16:15:08 DEBUG AnnotationBinder:560 - Binding entity from annotated class: entity.Client
2021-04-07 16:15:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-07 16:15:08 DEBUG EntityBinder:430 - Import with entity name Client
2021-04-07 16:15:08 DEBUG EntityBinder:873 - Bind entity entity.Client on table clients
2021-04-07 16:15:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-07 16:15:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entity.Client] is safe
2021-04-07 16:15:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Client
2021-04-07 16:15:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-07 16:15:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entity.Client:id]
2021-04-07 16:15:08 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-07 16:15:08 DEBUG PropertyBinder:266 - Building property id
2021-04-07 16:15:08 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-07 16:15:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=about, insertable=true, updatable=true, unique=false}
2021-04-07 16:15:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property about with lazy=false
2021-04-07 16:15:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entity.Client:about]
2021-04-07 16:15:08 DEBUG SimpleValueBinder:410 - building SimpleValue for about
2021-04-07 16:15:08 DEBUG PropertyBinder:266 - Building property about
2021-04-07 16:15:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=age, insertable=true, updatable=true, unique=false}
2021-04-07 16:15:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property age with lazy=false
2021-04-07 16:15:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entity.Client:age]
2021-04-07 16:15:08 DEBUG SimpleValueBinder:410 - building SimpleValue for age
2021-04-07 16:15:08 DEBUG PropertyBinder:266 - Building property age
2021-04-07 16:15:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-04-07 16:15:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-04-07 16:15:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entity.Client:email]
2021-04-07 16:15:08 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-04-07 16:15:08 DEBUG PropertyBinder:266 - Building property email
2021-04-07 16:15:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2021-04-07 16:15:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property name with lazy=false
2021-04-07 16:15:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entity.Client:name]
2021-04-07 16:15:08 DEBUG SimpleValueBinder:410 - building SimpleValue for name
2021-04-07 16:15:08 DEBUG PropertyBinder:266 - Building property name
2021-04-07 16:15:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(clients), mappingColumn=phone, insertable=true, updatable=true, unique=true}
2021-04-07 16:15:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property phone with lazy=false
2021-04-07 16:15:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entity.Client:phone]
2021-04-07 16:15:08 DEBUG SimpleValueBinder:410 - building SimpleValue for phone
2021-04-07 16:15:08 DEBUG PropertyBinder:266 - Building property phone
2021-04-07 16:15:08 DEBUG AnnotationBinder:560 - Binding entity from annotated class: entity.Account
2021-04-07 16:15:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-07 16:15:08 DEBUG EntityBinder:430 - Import with entity name Account
2021-04-07 16:15:08 DEBUG EntityBinder:873 - Bind entity entity.Account on table accounts
2021-04-07 16:15:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-07 16:15:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entity.Account] is safe
2021-04-07 16:15:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Account
2021-04-07 16:15:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-07 16:15:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entity.Account:id]
2021-04-07 16:15:08 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-07 16:15:08 DEBUG PropertyBinder:266 - Building property id
2021-04-07 16:15:08 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-07 16:15:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=client_id, insertable=true, updatable=true, unique=false}
2021-04-07 16:15:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property client_id with lazy=false
2021-04-07 16:15:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entity.Account:client_id]
2021-04-07 16:15:08 DEBUG SimpleValueBinder:410 - building SimpleValue for client_id
2021-04-07 16:15:08 DEBUG PropertyBinder:266 - Building property client_id
2021-04-07 16:15:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=number, insertable=true, updatable=true, unique=true}
2021-04-07 16:15:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property number with lazy=false
2021-04-07 16:15:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entity.Account:number]
2021-04-07 16:15:08 DEBUG SimpleValueBinder:410 - building SimpleValue for number
2021-04-07 16:15:08 DEBUG PropertyBinder:266 - Building property number
2021-04-07 16:15:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(accounts), mappingColumn=value, insertable=true, updatable=true, unique=false}
2021-04-07 16:15:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property value with lazy=false
2021-04-07 16:15:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entity.Account:value]
2021-04-07 16:15:08 DEBUG SimpleValueBinder:410 - building SimpleValue for value
2021-04-07 16:15:08 DEBUG PropertyBinder:266 - Building property value
2021-04-07 16:15:08 DEBUG AnnotationBinder:560 - Binding entity from annotated class: entity.Status
2021-04-07 16:15:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-04-07 16:15:08 DEBUG EntityBinder:430 - Import with entity name Status
2021-04-07 16:15:08 DEBUG EntityBinder:873 - Bind entity entity.Status on table statuses
2021-04-07 16:15:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-04-07 16:15:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entity.Status] is safe
2021-04-07 16:15:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Status
2021-04-07 16:15:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-04-07 16:15:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entity.Status:id]
2021-04-07 16:15:08 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-04-07 16:15:08 DEBUG PropertyBinder:266 - Building property id
2021-04-07 16:15:08 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2021-04-07 16:15:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=alias, insertable=true, updatable=true, unique=true}
2021-04-07 16:15:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property alias with lazy=false
2021-04-07 16:15:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entity.Status:alias]
2021-04-07 16:15:08 DEBUG SimpleValueBinder:410 - building SimpleValue for alias
2021-04-07 16:15:08 DEBUG PropertyBinder:266 - Building property alias
2021-04-07 16:15:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statuses), mappingColumn=description, insertable=true, updatable=true, unique=false}
2021-04-07 16:15:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property description with lazy=false
2021-04-07 16:15:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [entity.Status:description]
2021-04-07 16:15:08 DEBUG SimpleValueBinder:410 - building SimpleValue for description
2021-04-07 16:15:08 DEBUG PropertyBinder:266 - Building property description
2021-04-07 16:15:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-07 16:15:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for about
2021-04-07 16:15:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for age
2021-04-07 16:15:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-04-07 16:15:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for name
2021-04-07 16:15:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for phone
2021-04-07 16:15:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-07 16:15:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for client_id
2021-04-07 16:15:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for number
2021-04-07 16:15:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for value
2021-04-07 16:15:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-04-07 16:15:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for alias
2021-04-07 16:15:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for description
2021-04-07 16:15:08 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [clients]
2021-04-07 16:15:08 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [accounts]
2021-04-07 16:15:08 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [statuses]
2021-04-07 16:15:08 DEBUG SessionFactoryImpl:204 - Building session factory
2021-04-07 16:15:08 DEBUG Settings:68 - SessionFactory name : null
2021-04-07 16:15:08 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-04-07 16:15:08 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-04-07 16:15:08 DEBUG Settings:72 - Statistics: disabled
2021-04-07 16:15:08 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-04-07 16:15:08 DEBUG Settings:75 - Default entity-mode: pojo
2021-04-07 16:15:08 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-04-07 16:15:08 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-04-07 16:15:08 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-04-07 16:15:08 DEBUG Settings:80 - Default batch fetch size: -1
2021-04-07 16:15:08 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-04-07 16:15:08 DEBUG Settings:82 - Default null ordering: NONE
2021-04-07 16:15:08 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-04-07 16:15:08 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-04-07 16:15:08 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-04-07 16:15:08 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-04-07 16:15:08 DEBUG Settings:90 - Query language substitutions: {}
2021-04-07 16:15:08 DEBUG Settings:91 - Named query checking : enabled
2021-04-07 16:15:08 DEBUG Settings:93 - Second-level cache: disabled
2021-04-07 16:15:08 DEBUG Settings:94 - Second-level query cache: disabled
2021-04-07 16:15:08 DEBUG Settings:95 - Second-level query cache factory: null
2021-04-07 16:15:08 DEBUG Settings:96 - Second-level cache region prefix: null
2021-04-07 16:15:08 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-04-07 16:15:08 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-04-07 16:15:08 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-04-07 16:15:08 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-04-07 16:15:08 DEBUG Settings:102 - JDBC batch size: 15
2021-04-07 16:15:08 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-04-07 16:15:08 DEBUG Settings:104 - Scrollable result sets: enabled
2021-04-07 16:15:08 DEBUG Settings:105 - Wrap result sets: disabled
2021-04-07 16:15:08 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-04-07 16:15:08 DEBUG Settings:107 - JDBC result set fetch size: null
2021-04-07 16:15:08 DEBUG Settings:108 - Connection release mode: AFTER_TRANSACTION
2021-04-07 16:15:08 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-04-07 16:15:08 DEBUG Settings:111 - JPA compliance - query : disabled
2021-04-07 16:15:08 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-04-07 16:15:08 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-04-07 16:15:08 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-04-07 16:15:08 DEBUG SessionFactoryImpl:259 - Session factory constructed with filter configurations : {}
2021-04-07 16:15:08 DEBUG SessionFactoryImpl:260 - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.specification.version=11, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect, java.class.path=/Users/ekaterina/IdeaProjects/home_work_25_log/target/classes:/Users/ekaterina/.m2/repository/org/postgresql/postgresql/42.2.18/postgresql-42.2.18.jar:/Users/ekaterina/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/ekaterina/.m2/repository/org/hibernate/hibernate-core/5.4.29.Final/hibernate-core-5.4.29.Final.jar:/Users/ekaterina/.m2/repository/org/jboss/logging/jboss-logging/3.4.1.Final/jboss-logging-3.4.1.Final.jar:/Users/ekaterina/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/ekaterina/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/Users/ekaterina/.m2/repository/net/bytebuddy/byte-buddy/1.10.21/byte-buddy-1.10.21.jar:/Users/ekaterina/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/ekaterina/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/ekaterina/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/ekaterina/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/ekaterina/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/ekaterina/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/ekaterina/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/ekaterina/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/ekaterina/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/ekaterina/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/ekaterina/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/ekaterina/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/ekaterina/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/ekaterina/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=UA, sun.boot.library.path=/Library/Java/JavaVirtualMachines/amazon-corretto-11.jdk/Contents/Home/lib, sun.java.command=Main, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/ekaterina, user.language=ru, java.specification.vendor=Oracle Corporation, java.version.date=2020-07-14, java.home=/Library/Java/JavaVirtualMachines/amazon-corretto-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.8+10-LTS, user.name=ekaterina, path.separator=:, hibernate.connection.username=****, os.version=10.15.7, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/postgres, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-11.0.8.10.1, show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-11/issues/, java.io.tmpdir=/var/folders/1f/hvhrzhb12458vd6b2zqqt5500000gn/T/, java.version=11.0.8, user.dir=/Users/ekaterina/IdeaProjects/home_work_25_log, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1a891add, java.library.path=/Users/ekaterina/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, java.vm.version=11.0.8+10-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, hibernate.connection.pool_size=14, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
2021-04-07 16:15:08 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-04-07 16:15:08 DEBUG SessionFactoryImpl:300 - Instantiated session factory
2021-04-07 16:15:08 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d39f2d8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@eb507b9]
2021-04-07 16:15:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entity.Status] is safe
2021-04-07 16:15:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Status
2021-04-07 16:15:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entity.Client] is safe
2021-04-07 16:15:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Client
2021-04-07 16:15:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [entity.Account] is safe
2021-04-07 16:15:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : entity.Account
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: entity.Status
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:3923 -  Version select: select id from statuses where id =?
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select status_.id, status_.alias as alias2_2_, status_.description as descript3_2_ from statuses status_ where status_.id=?
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into statuses (alias, description, id) values (?, ?, ?)
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:394 -  Update 0: update statuses set alias=?, description=? where id=?
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from statuses where id=?
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into statuses (alias, description) values (?, ?)
2021-04-07 16:15:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f183caa]
2021-04-07 16:15:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : alias
2021-04-07 16:15:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : description
2021-04-07 16:15:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-07 16:15:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-07 16:15:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=entity.Status)
    - Returns
       - EntityReturnImpl(entity=entity.Status, querySpaceUid=<gen:0>, path=entity.Status)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Status)
          - SQL table alias mapping - status0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2021-04-07 16:15:08 DEBUG EntityLoader:129 - Static select for entity entity.Status [NONE]: select status0_.id as id1_2_0_, status0_.alias as alias2_2_0_, status0_.description as descript3_2_0_ from statuses status0_ where status0_.id=?
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: entity.Client
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:3923 -  Version select: select id from clients where id =?
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select client_.id, client_.about as about2_1_, client_.age as age3_1_, client_.email as email4_1_, client_.name as name5_1_, client_.phone as phone6_1_ from clients client_ where client_.id=?
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into clients (about, age, email, name, phone, id) values (?, ?, ?, ?, ?, ?)
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:394 -  Update 0: update clients set about=?, age=?, email=?, name=?, phone=? where id=?
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from clients where id=?
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into clients (about, age, email, name, phone) values (?, ?, ?, ?, ?)
2021-04-07 16:15:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fd05028]
2021-04-07 16:15:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : about
2021-04-07 16:15:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : age
2021-04-07 16:15:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-04-07 16:15:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : name
2021-04-07 16:15:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : phone
2021-04-07 16:15:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-07 16:15:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-07 16:15:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=entity.Client)
    - Returns
       - EntityReturnImpl(entity=entity.Client, querySpaceUid=<gen:0>, path=entity.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2021-04-07 16:15:08 DEBUG EntityLoader:129 - Static select for entity entity.Client [NONE]: select client0_.id as id1_1_0_, client0_.about as about2_1_0_, client0_.age as age3_1_0_, client0_.email as email4_1_0_, client0_.name as name5_1_0_, client0_.phone as phone6_1_0_ from clients client0_ where client0_.id=?
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:3918 - Static SQL for entity: entity.Account
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:3923 -  Version select: select id from accounts where id =?
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:3926 -  Snapshot select: select account_.id, account_.client_id as client_i2_0_, account_.number as number3_0_, account_.value as value4_0_ from accounts account_ where account_.id=?
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into accounts (client_id, number, value, id) values (?, ?, ?, ?)
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:394 -  Update 0: update accounts set client_id=?, number=?, value=? where id=?
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from accounts where id=?
2021-04-07 16:15:08 DEBUG AbstractEntityPersister:3934 -  Identity insert: insert into accounts (client_id, number, value) values (?, ?, ?)
2021-04-07 16:15:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fb392c4]
2021-04-07 16:15:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : client_id
2021-04-07 16:15:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : number
2021-04-07 16:15:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : value
2021-04-07 16:15:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:160 - Building LoadPlan...
2021-04-07 16:15:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-04-07 16:15:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=entity.Account)
    - Returns
       - EntityReturnImpl(entity=entity.Account, querySpaceUid=<gen:0>, path=entity.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=entity.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2021-04-07 16:15:08 DEBUG EntityLoader:129 - Static select for entity entity.Account [NONE]: select account0_.id as id1_0_0_, account0_.client_id as client_i2_0_0_, account0_.number as number3_0_0_, account0_.value as value4_0_0_ from accounts account0_ where account0_.id=?
2021-04-07 16:15:08 DEBUG SchemaManagementToolCoordinator:57 - No actions specified; doing nothing
2021-04-07 16:15:08 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-04-07 16:15:08 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-04-07 16:15:08 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-07 16:15:08 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-04-07 16:15:08 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-04-07 16:15:08 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-04-07 16:15:08 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6949e948
2021-04-07 16:15:08 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: eb826fa3-b646-426c-94e3-ecaa88f66032 (<unnamed>)
2021-04-07 16:15:08 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-04-07 16:15:08 ERROR HibernateUtil:25 - Configuration error: org.hibernate.cfg.Configuration@97a145b
2021-04-07 16:15:08 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-04-07 16:15:08 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-04-07 16:15:08 DEBUG TransactionImpl:81 - begin
2021-04-07 16:15:08 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-04-07 16:15:08 DEBUG SQL:144 - insert into clients (about, age, email, name, phone) values (?, ?, ?, ?, ?)
2021-04-07 16:15:08 DEBUG SqlExceptionHelper:126 - could not execute statement [n/a]
org.postgresql.util.PSQLException: ERROR: column "about" of relation "clients" does not exist
  Позиция: 22
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2553)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2285)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:323)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:473)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:393)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:130)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:43)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3195)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3801)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:84)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:194)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:179)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:75)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:93)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:636)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:629)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:624)
	at dao.ClientDao.save(ClientDao.java:18)
	at service.ClientService.save(ClientService.java:14)
	at Main.main(Main.java:15)
2021-04-07 16:15:08 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42703
2021-04-07 16:15:08 ERROR SqlExceptionHelper:142 - ERROR: column "about" of relation "clients" does not exist
  Позиция: 22
